<script>
// (c) Copyright 2016 Caroline Schnapp. All Rights Reserved. Contact: mllegeorgesand@gmail.com
// See https://docs.shopify.com/themes/customization/navigation/link-product-options-in-menus

var Shopify = Shopify || {};

Shopify.optionsMap = {};

Shopify.updateOptionsInSelector = function(selectorIndex) {
    
  switch (selectorIndex) {
    case 0:
      var key = 'root';
      var selector = document.querySelector('.selector-wrapper:nth-child(1) .single-option-selector');
      break;
    case 1:
      var key = document.querySelector('.selector-wrapper:nth-child(1) .single-option-selector').value;
      var selector = document.querySelector('.selector-wrapper:nth-child(2) .single-option-selector');
      break;
    case 2:
      var key = document.querySelector('.selector-wrapper:nth-child(1) .single-option-selector').value;  
      key += ' / ' + document.querySelector('.selector-wrapper:nth-child(2) .single-option-selector').value;
      var selector = document.querySelector('.selector-wrapper:nth-child(3) .single-option-selector');
  }
  
  var initialValue = selector.value;
  selector.innerHTML = '';
  var availableOptions = Shopify.optionsMap[key];
  
  for (var i=0; i<availableOptions.length; i++) {
    var option = availableOptions[i];
    var node = document.createElement("option");
    node.value = option;
    node.appendChild(document.createTextNode(option));
    selector.appendChild(node); 
  }
  document.querySelectorAll('.swatch[data-option-index="' + selectorIndex + '"] .swatch-element').forEach(function(elm) {
    if(availableOptions.includes(elm.getAttribute('data-value'))) {
      elm.classList.remove('soldout');
      elm.querySelector('input[type="radio"]').disabled = false;
    } else {
      elm.classList.add('soldout');
      elm.querySelector('input[type="radio"]').disabled = true;
    }
  });
  if(availableOptions.includes(initialValue)) {
    selector.value = initialValue;
  }
  selector.dispatchEvent(new Event("change"));
};

Shopify.linkOptionSelectors = function(product) {
  // Building our mapping object.
  for (var i=0; i<product.variants.length; i++) {
    var variant = product.variants[i];
    if (variant.available) {
      // Gathering values for the 1st drop-down.
      Shopify.optionsMap['root'] = Shopify.optionsMap['root'] || [];
      Shopify.optionsMap['root'].push(variant.option1);
      Shopify.optionsMap['root'] = Shopify.optionsMap['root'].filter(function(value, index, self){
        return self.indexOf(value) === index;
      });
      // Gathering values for the 2nd drop-down.
      if (product.options.length > 1) {
        var key = variant.option1;
        Shopify.optionsMap[key] = Shopify.optionsMap[key] || [];
        Shopify.optionsMap[key].push(variant.option2);
        Shopify.optionsMap[key] = Shopify.optionsMap[key].filter(function(value, index, self){
          return self.indexOf(value) === index;
        });
      }
      // Gathering values for the 3rd drop-down.
      if (product.options.length === 3) {
        var key = variant.option1 + ' / ' + variant.option2;
        Shopify.optionsMap[key] = Shopify.optionsMap[key] || [];
        Shopify.optionsMap[key].push(variant.option3);
        Shopify.optionsMap[key] = Shopify.optionsMap[key].filter(function(value, index, self){
          return self.indexOf(value) === index;
        });
      }
    }
  }
  // Update options right away.
  Shopify.updateOptionsInSelector(0);
  if (product.options.length > 1) Shopify.updateOptionsInSelector(1);
  if (product.options.length === 3) Shopify.updateOptionsInSelector(2);
  // When there is an update in the first dropdown.
  document.querySelector(".selector-wrapper:nth-child(1) .single-option-selector").addEventListener('change',function() {
    Shopify.updateOptionsInSelector(1);
    if (product.options.length === 3) Shopify.updateOptionsInSelector(2);
    return true;
  });
  // When there is an update in the second dropdown.
  document.querySelector(".selector-wrapper:nth-child(2) .single-option-selector").addEventListener('change',function() {
    if (product.options.length === 3) Shopify.updateOptionsInSelector(2);
    return true;
  });  
  
  document.querySelectorAll('.swatch[data-option-index="0"] input[type="radio"]').forEach(function(elm){
    elm.addEventListener('change',function() {
      Shopify.updateOptionsInSelector(1);
      if (product.options.length === 3) Shopify.updateOptionsInSelector(2);
      return true;
    });
  });
  document.querySelectorAll('.swatch[data-option-index="1"] input[type="radio"]').forEach(function(elm){
    elm.addEventListener('change',function() {
      if (product.options.length === 3) Shopify.updateOptionsInSelector(2);
      return true;
    });  
  });
};
 
{% if product.available and product.options.size > 1 %}
  var addToCartForm = document.querySelector('.product-form[action="/cart/add"]');
  if (window.MutationObserver && addToCartForm != null) {
    if (typeof observer === 'object' && typeof observer.disconnect === 'function') {
      observer.disconnect();
    }
    var config = { childList: true, subtree: true };
    var observer = new MutationObserver(function() {      
      Shopify.linkOptionSelectors({{ product | json }});
      observer.disconnect();
    });  
    observer.observe(addToCartForm, config);
  }
{% endif %}
  
</script>
  